-- Aggregate function : COUNT

select count (first_name) from actors;

select count(*) from movies 
where movie_lang = 'English';

--Aggregate function : SUM

select sum(domestic_takings) from movie_revenues;

select sum(domestic_takings) from movie_revenues
where domestic_takings > 100;

select sum(movie_length) from movies 
where movie_lang = 'Chinese';


--Aggregate function : MIN & MAX

select max(movie_length) from movies;

select min(movie_length) from movies;

select min(movie_length) from movies 
where movie_lang = 'Japanese';

select max(release_date) from movies;

select min(release_date) from movies;

select max(movie_name) from movies;

select min(movie_name) from movies;

--Aggregate function : AVG

select avg(movie_length) from movies;

select avg(movie_length) from movies
where age_certificate ='18';

--Grouping Data

select movie_lang,count(movie_lang) from movies
group by movie_lang;

select movie_lang,avg(movie_length) from movies
group by movie_lang;

select movie_lang,age_certificate , avg(movie_length) from movies
group by movie_lang , age_certificate;

select movie_lang,age_certificate , avg(movie_length) from movies
where movie_length >100
group by movie_lang , age_certificate;

select movie_lang,min(movie_length),max(movie_length) from movies
where age_certificate = '15'
group by movie_lang;

--Having clauses

select movie_lang , count (movie_lang) from movies
group by movie_lang
having count(movie_lang) > 1;

select movie_lang , count (movie_lang) from movies
where movie_length > 100
group by movie_lang
having count(movie_lang) > 1;


--Using mathematical Operators

select movie_id , (domestic_takings + international_takings) as total_takings from movie_revenues
where domestic_takings is not null and international_takings is not null
order by movie_id;